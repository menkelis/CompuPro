

                ;	Sample READ/WRITE routines
                ;Memory	Size 	Hex address
                ;------	----	-----------
                ;64K	63K		FC00
                ;60K	59K		EC00
                ;56K	55K		DCOO
                ;52K	51K		CCOO
                ;48K	47K		BC00
                ;44K	43K		AC00
                ;40K	39K		9C00
                ;36K	35K		8C00
                ;32K	31K		7C00
                ;28K	27K		6CO0
                ;24K	23K		3COO
                
                ;	ORG	3C00h
                
                ;
                ;	M - D R I V E / H
                ;
                ;	To quickly add this to your exlstlng bios, just replace the "JMP
                ;	N0THING"s at the end of each routine with a jump to your BIOS,
                ;	and assemble lt all together. The DPB is set for one M-DRIVE/H
                ;	board, lf you have more boards you will have to adjust it
                ;	accordingly.
                ;	Information such as sector, track, and DMA address are saved even
                ;	lf they are not intended for the memory drive.	Thls is intended
                ;	as an example and as a way for someone to use the M-DRIVE/H board
                ;	with a minimum amount of trouble and work.	The performance of
                ;	any CP/M BIOS can be greatly enhanced by lntegrating thls code
                ;	directly into an exlstlng BIOS, as well as save some memory space.
                ;
                ;	This code expects the M-DRIVE/H board to be addressed at the
                ;	following I/0 ports:
                ;
                ;	0C6H - Data
                ;	0C7H - Address
                ;
                ;		Written L. Ott	12/17/82
                ;		1982 by CompuPro div. Godbout Electronics
                
 00C6 =         HBASE:	EQU	0C6h
 00C6 =         HDATA:	EQU	HBASE
 00C7 =         HADDR:	EQU	HBASE+1
                
 004D =         MEMDRV:	EQU	'M'				;SET AS DRIVE "M"
 0006 =         F$RDAT:	EQU	6				;READ DATA
 0005 =         F$WRT:	EQU	5				;WRITE DATA
 000A =         MRTRY:	EQU	10				;MAX RETRY COUNT
                
 0010 =         HMDSIB:	EQU	2048/128		;SECTORS IN MEMORY DRIVE DATA BLOCK
 00FE =         HMDDSM:	EQU	((512-4)*8)/HMDSIB
                ;
 0000 C33300    MDRIVE:	JMP		NOTHING		;COLD START
 0003 C33300    		JMP		NOTHING		;WARM START
 0006 C33300    		JMP		NOTHING		;CONSTAT
 0009 C33300    		JMP		NOTHING		;C0NIN
 000C C33300    		JMP		NOTHING		;CONOUT
 000F C33300    		JMP		NOTHING		;LIST
 0012 C33300    		JMP		NOTHING		;PUNCH
 0015 C33300    		JMP		NOTHING		;READER
 0018 C34700    		JMP		HOME		;HOME
 001B C33400    		JMP		SELDSK		;SELECT DISK
 001E C35100    		JMP		SETTRK		;SET TRACK
 0021 C35900    		JMP		SETSEC		;SET SECTOR
 0024 C36200    		JMP		SETDMA		;SET DMA
 0027 C37000    		JMP		READ		;READ
 002A C37F00    		JMP		WRITE		;WRITE
 002D C33300    		JMP		NOTHING		;LIST STATUS
 0030 C36A00    		JMP		SECTRN		;SECT0R TRANSLATE
                ;
                ;DUMMY ROUTINE FOR NON IMPLEMENTED ROUTINES
                ;
                NOTHING:
 0033 C9        		RET
                ;
                ;
                ;	S E L E C T   D I S K   D RI V E
                
                ;	Select the disk drive for subsequent disk transfers and return
                ;	the address of the DPH for the memory drive.
                ;	ENTRY -- C = disk selection value
                ;	  DE and l = 0 must determine disk type
                ;	           = 1 type already determined (only needed for floppies)
                ;
                ;	EXIT -- HL = DPH address of the memory drive.
                ;	        If memory drive not selected, control is passed to BIOS
                ;
 0034 AF        SELDSK:	XRA		A			;CLEAR A
 0035 320E01    		STA		SELFLG		;CLEAR MEMORY DRIVE FLAG
 0038 79        		MOV		A,C			;
 0039 FE0C      		CPI		MEMDRV-'A'	;IS MEMORY DRIVE SELECTED
 003B C23300    BIOSSEL:JNZ		NOTHING		;IF NOT GO BACK TO BIOS
 003E 3EFF      		MVI		A,0FFH
 0040 320E01    		STA		SELFLG		;SET MEMORY DRIVE AS SELECTED
 0043 21FE00    		LXI		H,HMD$DPH	;GET DPH ADDRESS
 0046 C9        		RET					;AND DONE
                ;
                ;	H O M E
                ;	Set current track to 0
                ;
 0047 AF        HOME:	XRA		A
 0048 321201    		STA		CIOPB+2		;SET TRACK AS 0
 004B 321301    		STA		CIOPB+3
 004E C33300    BI0SH0M:JMP		NOTHING		;ON TO BIOS
                ;
                ;	S  E  T   T R A C K
                ;
                ;	Set track number.  The track number 1s save for later use during
                ;	a disk transfer.  The track is save whether or not the memory disk
                ;	is currently selected.
                ;
                ;	ENTRY -- BC = Track number.
                ;
 0051 69        SETTRK:	MOV		L,C
 0052 60        		MOV		H,B
 0053 221201    		SHLD	CIOPB+2
 0056 C33300    BIOSTRK:JMP		NOTHING
                ;
                ;	S E T	S E C T 0 R
                ;
                ;	Set	sector number.  The sector number is save for later use during
                ;	a disk transfer.  The sector is saved whether or not the memory
                ;	disk 1s current1y selected.
                ;
                ;	ENTRY -- BC = Sector number.
                
 0059 69        SETSEC:	MOV		L,C
 005A 60        		MOV		H,B
 005B 23        		INX		H			;+1 TO MAKE LIKE FLOPPIES (1-26)
 005C 221401    		SHLD	CIOPB+4
 005F C33300    BIOSSEC:JMP		NOTHING
                ;
                ;	S E T   D M A   A D D R E S S
                ;
                ;	Set the address for the next DMA transfer.
                ;	The DMA address is saved for later use during a disk transfer.
                ;	The address is saved whether or not the memory disk ia
                ;	currently selected.
                ;
                ;	ENTRY -- BC = Disk memory address.
                
 0062 69        SETDMA:	MOV		L,C
 0063 60        		MOV		H,B
 0064 221801    		SHLD	DMAADR
 0067 C33300    BIOSDHA:JMP		NOTHING
                ;
                ;	S  E  C  T O R   T R A N S L A T E
                ;
                ;	Translate the sector number from logical to physical.
                ;
                ;	ENTRY	DE = 0, no translatlon required.
                ;           DE = Translation table address.
                ;           BC = Number to translate.
                ;
 006A 7A        SECTRN:	MOV		A,D
 006B B3        		ORA		E
 006C C8        		RZ					;No translation needed.
 006D C33300    		JMP		NOTHING		;Let BIOS translate.
                ;
                ;	R E A D
                ;
                ;	Read the currently selected track,sector from the currently
                ;	selected drive.
                ;
 0070 3A0E01    READ:	LDA		SELFLG
 0073 B7        		ORA		A
 0074 CA3300    BIOSRED:JZ		NOTHING
 0077 3E06      		MVI		A,F$RDAT	;MUST WANT THR HEMORY DRIVE
 0079 321001    		STA		CIOPB		;TO COMMAND BUFFER
 007C C38B00    		JMP		HMDFNL		;AND GO PROCESS
                ;
                ;	W R I T E
                ;
                ;	Write to the current1y selected drive at the current track
                ;	and sector.
                ;
 007F 3A0E01    WRITE:	LDA		SELFLG
 0082 B7        		ORA		A			;IS MEMORY DRIVE SELECTED
 0083 CA3300    BIOSWRT:JZ		NOTHING
 0086 3E05      		MVI		A,F$WRT		;SET COMMAND AS WRITE
 0088 321001    		STA		CIOPB
                ;		JMP		HMDFNL		;AND GO PROCESS
                ;
                ;	HMDFNL - Hard memory disk final command processing
                ;	ENTRY -- CIOPB+0 = COMMAND
                ;			 CIOPB+2 = TRACK
                ;			 CIOPB+4 = SECTOR
                ;
 008B 3E0A      HMDFNL:	MVI		A,MRTRY		;Set retry count
 008D 320F01    		STA		RTRY
 0090 2A1201    HMDFNL1:LHLD	CIOPB+2		;GET TRACK
 0093 29        		DAD		H			;*2
 0094 29        		DAD		H			;*4
 0095 29        		DAD		H			;*8
 0096 29        		DAD		H			;*l6
 0097 29        		DAD		H			;*32
 0098 29        		DAD		H			;*64
 0099 29        		DAD		H			;*128
 009A 3A1401    		LDA		CIOPB+4		;GET SECTOR
 009D 3D        		DCR		A			;STARTS AT 0
 009E CDE600    		CALL	SETMDRV		;SET HDRIVE BOARD VIA <A>,<HL>
 00A1 0E80      		MVI		C, 128		;<C> = 128 BYTE'S PER SECTOR
 00A3 41        		MOV		B,C			; also into <B> for parity check
 00A4 2A1801    		LHLD	DMAADR		;DIRECTLY TO CPM BUFFER
 00A7 3A1001    		LDA		CIOPB		;GET COMMAND
 00AA FE06      		CPI		F$RDAT		;
 00AC C2CD00    		JNZ		M$WRITE		;IF WRITE COMMAND JUMP
                ;
                ;		JMP		M$READ
                ;
                ;	GET A 128 BYTE BLOCK FROM M-DRIVE/H BOARD
                ;	ADDRESS IS ALREADY SELECTED.
                ;	ENTRY -- <C> IS NUMBER OF BYTES TO MOVE
                ;			 <HL> IS DMA BUFFER TO PUT DATA
                ;
                ;	EXIT -- <A> = 0 No errors, 1 READ error.
 00AF DBC6      M$READ:	IN		HDATA		;GET DATA BYTE
 00B1 77        		MOV		M,A			;PUT TO DMA BLOCK
 00B2 80        		ADD		B			;ADD UP PARITY BYTE
 00B3 47        		MOV		B,A			; AND SAVE
 00B4 23        		INX		H			;UP POINTER
 00B5 0D        		DCR		C			;C0UNT THIS MOVE
 00B6 C2AF00    		JNZ		M$READ		;AND DO AGAIN
 00B9 CDDF00    		CALL	PARITY		;D0 PARITY CHECK
 00BC DBC6      		IN		HDATA		;GET PARITY BYTE
 00BE 90        		SUB		B			; 0 IF NO ERROR
 00BF C8        		RZ					;	THEN RETURN
 00C0 3A0F01    		LDA		RTRY		;GET RETRY COUNT
 00C3 3D        		DCR		A			;
 00C4 320F01    		STA		RTRY		;REPLACE WITH NEW COUNT
 00C7 C29000    		JNZ		HMDFNL1		;
 00CA F601      		ORI		1			;Set ERROR flag
 00CC C9        		RET					;RETURN WHEN DONE
                ;
                ;	PUT A BLOCK OF DATA INTO M-DRIVE/H BOARD
                ;	ADDRESS IS ALREADY SELECTED.
                ;	ENTRY -- <C>  IS NUNBER OF BYTES TO MOVE
                ;			 <HL> IS DMA BUFFER TO GET DATA FROM
                ;
                ;	EXIT -- <A> = 0 No errors.
 00CD 7E        M$WRITE:MOV		A,M			;GET BYTE FROH BUFFER
 00CE D3C6      		OUT		HDATA		;TO MDRIVE BOARD
 00D0 80        		ADD		B			;ADD UP PARITY BYTE
 00D1 47        		MOV		B,A			; AND SAVE
 00D2 23        		INX		H
 00D3 0D        		DCR		C			;COUNT THIS MOVE
 00D4 C2CD00    		JNZ		M$WRITE		;IF DONE WITH 128 OR <C> COUNT
 00D7 CDDF00    		CALL	PARITY		;SELECT PARITY BYTE LOCATION
 00DA 78        		MOV		A,B
 00DB D3C6      		OUT		HDATA		;WRITE PARITY BYTE TO HEMORY DISK
 00DD AF        		XRA		A			;AND SHOW NO ERROR
 00DE C9        		RET					;RETURN
                ;
                ;	FIND LOCATION IF PARITY BYTE FOR TRACK IN CIOPB+2
                ;	AND THE SECTOR IN CIOPB+4
 00DF 3A1401    PARITY:	LDA		CIOPB+4		;Get sector
 00E2 3D        		DCR		A			;Bias
 00E3 2A1201    		LHLD	CIOPB+2		;Get track
                
                ;	Set	M-DRIVE/H board to address In <A>,<HL>
 00E6 D3C7      SETMDRV:OUT		HADDR		;<A>: to M-DRIVE/H board
 00E8 7C        		MOV		A,H			;<H>: is always 0 or 1
 00E9 D3C7      		OUT		HADDR
 00EB 7D        		MOV		A,L			;<L>: Upper bit's picks track 0-3
 00EC D3C7      		OUT		HADDR		; remainder picks sector and byte
 00EE C9        		RET
                ;
                ;	Disk Parameter Block
                ;
                HMD$DPB:					;SET FOR 1 BOARD, 8 SPT
 00EF 80        		DB	128				;HDRIVE TYPE FOR MFORM, DO NOT CHANGE
 00F0 0800      		DW	8				;SECT0RS PER TRACK, THIS AND DSM ...
                							;...HUST BE INCREASED FOR MORE BOARDS
 00F2 0497      		DB	4,151			;BSH, BLH, EXM
 00F4 FD007F00  		DW	HMDDSM-1,128-1	;DSM , NUMBER OF DIRECTORY ENTRIES
 00F8 C000      		DB	11000000B,00000000B	;RESERVED DIR BLOCKS, MUST MATCH ...
                							; ... NUMBER OF DIRECTORY ENTRIES
 00FA 0000      		DW	0				;CHECK SUM
 00FC 0400      		DW	4				;NUMBER OF RESERVED TRAGKS FOR PARITY CHECK
                							;	THIS IS ALWAYS 4
                ;
                ;	Disk Parameter Header
                ;
                HMD$DPH:
 00FE 0000      		DW	0				;SECT0R TRANSLATE TABLE
 0100 0000000000		DW	0,0,0			;SCRATCH
 0106 1A01      		DW	BUFDIR			;DIRECT0RY BUFFER
 0108 F000      		DW	HMD$DPB+1		;DPB BLOCK
 010A 0000      		DW	0				;CHECKSUM VECTOR
 010C 9A01      		DW	ALV				;ALL0CATI0N VECTOR
                ;
 010E =         MDRLNG:	EQU		$-MDRIVE	;LENGTH OF MDRIVE BIOS
                ;
                ;	Flags and Buffers
                ;
 010E           SELFLG:	DS		1			;DISK SELECT FLAG
 010F           RTRY:	DS		1			;RETRY COUNTER
 0110           CIOPB:	DS		8			;COMMAND BUFFER,TRACK,SECTOR
 0118           DMAADR:	DS		2			;ADDRESS OF DHA BUFFER
 011A           BUFDIR:	DS		128			;DIRECTORY BUFFER FOR CPM
 019A           ALV:	DS		(((HMDDSM*8)+7)/8)+1
 0299           	END
