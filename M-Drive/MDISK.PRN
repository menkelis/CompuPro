

                ;	MDISK  Relocatable M-Drive/H Driver module
                ;
                ; ASM MDISK (ORG 0000h)
                ; DDT
                ; IMDISK.HEX
                ; R100
                ; G0
                ; ERA MDISK000.COM
                ; SAVE 1 MDISK000.COM
                ; ASM MDISK (ORG 0100h)
                ; LOAD MDISK
                ; ERA MDISK100.COM
                ; REN MDISK100.COM=MDISK.COM
                
                
 0000           	ORG	0000h
                ;	ORG	0100h
                
                ;
                ;	M - D R I V E / H
                ;
                ;	The DPB is set for one M-DRIVE/H board, and will be adjusted by the
                ;	installer progam accordingly.
                ;	Information such as sector, track, and DMA address are saved even
                ;	if they are not intended for the memory drive.	The performance of
                ;	any CP/M BIOS can be greatly enhanced by integrating this code
                ;	directly into an existing BIOS, as well as save some memory space.
                ;
                ;	This code expects the M-DRIVE/H board to be addressed at the
                ;	following I/O ports:
                ;
                ;	0C6H - Data
                ;	0C7H - Address
                ;
                ;		Written L. Ott	12/17/82
                ;		1982 by CompuPro div. Godbout Electronics
                ;
                ;	Updated for use by self-installer by Michael Enkelis 2023
                ;	Self-installer written by Michael Enkelis with some code
                ;	written by Mike Douglas 2017
                
 00C6 =         HBASE	EQU	0C6h
 00C6 =         HDATA	EQU	HBASE
 00C7 =         HADDR	EQU	HBASE+1
                
 004D =         MEMDRV	EQU	'M'				;SET AS DRIVE "M"
 0008 =         spt		equ	8				;Sectors per track
 0080 =         secsize	equ	128				;Size of sector in bytes
 0000 =         NOTHING	equ	0
                
 0010 =         SIB:	EQU	2048/secsize	;SECTORS IN MEMORY DRIVE DATA BLOCK
 00FE =         DSM:	EQU	((512-4)*spt)/SIB
                ;
 0000 C35100    MDRIVE:	JMP		HOME		;HOME
 0003 C34100    		JMP		SELDSK		;SELECT DISK
 0006 C35A00    		JMP		SETTRK		;SET TRACK
 0009 C36200    		JMP		SETSEC		;SET SECTOR
 000C C36900    		JMP		SETDMA		;SET DMA
 000F C37900    		JMP		READ		;READ
 0012 C38300    		JMP		WRITE		;WRITE
 0015 C37100    		JMP		SECTRN		;SECT0R TRANSLATE
                
 0018 C30000    BIOSHOM:JMP		NOTHING		;HOME
 001B C30000    BIOSSEL:JMP		NOTHING		;SELECT DISK
 001E C30000    BIOSTRK:JMP		NOTHING		;SET TRACK
 0021 C30000    BIOSSEC:JMP		NOTHING		;SET SECTOR
 0024 C30000    BIOSDMA:JMP		NOTHING		;SET DMA
 0027 C30000    BIOSRED:JMP		NOTHING		;READ
 002A C30000    BIOSWRT:JMP		NOTHING		;WRITE
 002D C30000    BIOSTRN:JMP		NOTHING		;SECT0R TRANSLATE
                
 0030 EC00      DRIVE:	DW		MDISKL		;Filled in by loader with MEMDRV-'A', M-DRIVE/H TYPE
                							;DO NOT CHANGE VALUE OR LOCATION
                ;
                ;	Disk Parameter Block
                ;
                MD$DPB:						;SET FOR 1 BOARD, 8 SPT
 0032 0800      		DW	spt				;SPT* (SECTORS PER TRACK, THIS AND EXM, DSM ...
                							;...MUST BE CHANGED FOR MORE BOARDS)
 0034 040F      		DB	4,15			;BSH, BLH
 0036 01        		DB	1				;EXM*
 0037 FD00      		DW	DSM-1			;DSM*
 0039 7F00      		DW	128-1			;DRM
 003B C000      		DB	0C0h,00h		;AL0, AL1 (RESERVED DIR BLOCKS, MUST MATCH ...
                							; ... NUMBER OF DIRECTORY ENTRIES)
 003D 0000      		DW	0				;CKS (CHECK SUM), This is always zero.
 003F 0400      		DW	4				;OFF (NUMBER OF RESERVED TRAGKS FOR PARITY CHECK
                							;	THIS IS ALWAYS 4)
                ;
                ;	S E L E C T   D I S K   D RI V E
                
                ;	Select the disk drive for subsequent disk transfers and return
                ;	the address of the DPH for the memory drive.
                ;	ENTRY -- C = disk selection value
                ;	  DE and l = 0 must determine disk type
                ;	           = 1 type already determined (only needed for floppies)
                ;
                ;	EXIT -- HL = DPH address of the memory drive.
                ;	        If memory drive not selected, control is passed to BIOS
                ;
 0041 21D600    SELDSK:	LXI		H,SELFLG
 0044 AF        		XRA		A			;CLEAR A
 0045 77        		MOV		M,A			;CLEAR MEMORY DRIVE FLAG
 0046 3A3000    		LDA		DRIVE		;
 0049 91        		SUB		C			;IS MEMORY DRIVE SELECTED
 004A C21B00    		JNZ		BIOSSEL		;IF NOT GO BACK TO BIOS
 004D 2F        		CMA					;A=-1
 004E 77        		MOV		M,A			;SELFLG= -1, SET MEMORY DRIVE AS SELECTED
 004F 23        		INX		H			;<HL> = DPH ADDRESS
 0050 C9        		RET					;AND DONE
                ;
                ;	H O M E
                ;	Set current track to 0
                ;
 0051 210000    HOME:	LXI		H,0
 0054 22E800    		SHLD	TRACK		;SET TRACK AS 0
 0057 C31800    		JMP		BIOSHOM		;ON TO BIOS
                ;
                ;	S  E  T   T R A C K
                ;
                ;	Set track number.  The track number 1s save for later use during
                ;	a disk transfer.  The track is save whether or not the memory disk
                ;	is currently selected.
                ;
                ;	ENTRY -- BC = Track number.
                ;
 005A 69        SETTRK:	MOV		L,C
 005B 60        		MOV		H,B
 005C 22E800    		SHLD	TRACK
 005F C31E00    		JMP		BIOSTRK		;ON TO BIOS
                ;
                ;	S E T	S E C T 0 R
                ;
                ;	Set	sector number.  The sector number is save for later use during
                ;	a disk transfer.  The sector is saved whether or not the memory
                ;	disk 1s current1y selected.
                ;
                ;	ENTRY -- BC = Sector number.
                
 0062 79        SETSEC:	MOV		A,C
 0063 32E700    		STA		SECTOR		;Set sector
 0066 C32100    		JMP		BIOSSEC		;ON TO BIOS
                ;
                ;	S E T   D M A   A D D R E S S
                ;
                ;	Set the address for the next DMA transfer.
                ;	The DMA address is saved for later use during a disk transfer.
                ;	The address is saved whether or not the memory disk ia
                ;	currently selected.
                ;
                ;	ENTRY -- BC = Disk memory address.
                
 0069 69        SETDMA:	MOV		L,C
 006A 60        		MOV		H,B
 006B 22EA00    		SHLD	DMAADR		;Set DMA
 006E C32400    		JMP		BIOSDMA		;ON TO BIOS
                ;
                ;	S  E  C  T O R   T R A N S L A T E
                ;
                ;	Translate the sector number from logical to physical.
                ;
                ;	ENTRY	DE = 0, no translatlon required.
                ;           DE = Translation table address.
                ;           BC = Number to translate.
                ;
                ;	EXIT	HL = Physical sector number.
                ;
 0071 7A        SECTRN:	MOV		A,D			;DE=Translation table address
 0072 B3        		ORA		E			;Are we using translation?
 0073 C22D00    		JNZ		BIOSTRN		;Yes, Let BIOS translate
 0076 60        		MOV		H,B			;No translation required
 0077 69        		MOV		L,C			;HL=Physical sector number
 0078 C9        		RET					;And done
                ;
                ;	R E A D
                ;
                ;	Read the currently selected track,sector from the currently
                ;	selected drive.
                ;
 0079 3AD600    READ:	LDA		SELFLG		;SELFLG= -1 if selected
 007C A7        		ANA		A			;IS MEMORY DRIVE SELECTED
 007D CA2700    		JZ		BIOSRED		;ON TO BIOS
 0080 C38B00    		JMP		MDFNL		;A= -1 for READ
                ;
                ;	W R I T E
                ;
                ;	Write to the current1y selected drive at the current track
                ;	and sector.
                ;
 0083 3AD600    WRITE:	LDA		SELFLG		;SELFLG= -1 if selected
 0086 A7        		ANA		A			;IS MEMORY DRIVE SELECTED
 0087 CA2A00    		JZ		BIOSWRT		;ON TO BIOS
 008A AF        		XRA		A			;A= 0 for WRITE
                
                ;	Fall into MDFNL
                ;
                ;	MDFNL - Hard memory disk final command processing
                ;	ENTRY: <A> = Command. -1 = READ, 0 = WRITE
                ;
 008B 47        MDFNL:	MOV		B,A			;Save command
 008C 2AE800    		LHLD	TRACK		;GET TRACK
 008F 54        		MOV		D,H			;
 0090 5D        		MOV		E,L			;Save untranslated TRACK
 0091 29        		DAD		H			;*2
 0092 29        		DAD		H			;*4
 0093 29        		DAD		H			;*8
 0094 29        		DAD		H			;*l6
 0095 29        		DAD		H			;*32
 0096 29        		DAD		H			;*64
 0097 29        		DAD		H			;*128
 0098 CDCA00    		CALL	SETMDRV		;SET M-DRIVE/H BOARD VIA <HL>
 009B 2AEA00    		LHLD	DMAADR		;DIRECTLY TO CPM BUFFER
 009E 0E80      		MVI		C,secsize	;<C> = 128 BYTE'S PER SECTOR
 00A0 04        		INR		B			;<B>=0 READ [Z=1], 1 WRITE [Z=0]
 00A1 41        		MOV		B,C			;Set <B> for parity check
 00A2 C2B700    		JNZ		M$WRITE		;IF WRITE COMMAND JUMP
                ;
                ;		Fall into M$READ
                ;
                ;	GET A 128 BYTE BLOCK FROM M-DRIVE/H BOARD
                ;	ADDRESS IS ALREADY SELECTED.
                ;	ENTRY -- <C> IS NUMBER OF BYTES TO MOVE
                ;			 <HL> IS DMA BUFFER TO PUT DATA
                ;
                ;	EXIT -- <A> = 0 No errors, > 0 READ error.
 00A5 DBC6      M$READ:	IN		HDATA		;GET DATA BYTE
 00A7 77        		MOV		M,A			;PUT TO DMA BLOCK
 00A8 23        		INX		H			;UP POINTER
 00A9 80        		ADD		B			;ADD UP PARITY BYTE
 00AA 47        		MOV		B,A			; AND SAVE
 00AB 0D        		DCR		C			;C0UNT THIS MOVE
 00AC C2A500    		JNZ		M$READ		;AND DO AGAIN
 00AF EB        		XCHG				;<HL> = untranslated TRACK
 00B0 CDCA00    		CALL	SETMDRV		;SELECT PARITY BYTE LOCATION VIA <HL>
 00B3 DBC6      		IN		HDATA		;GET PARITY BYTE
 00B5 90        		SUB		B			; 0 IF NO ERROR
 00B6 C9        		RET					;	THEN RETURN
                ;
                ;	PUT A BLOCK OF DATA INTO M-DRIVE/H BOARD
                ;	ADDRESS IS ALREADY SELECTED.
                ;	ENTRY -- <C>  IS NUNBER OF BYTES TO MOVE
                ;			 <HL> IS DMA BUFFER TO GET DATA FROM
                ;
                ;	EXIT -- <A> = 0 No errors.
 00B7 7E        M$WRITE:MOV		A,M			;GET BYTE FROH BUFFER
 00B8 23        		INX		H			;UP POINTER
 00B9 D3C6      		OUT		HDATA		;TO MDRIVE BOARD
 00BB 80        		ADD		B			;ADD UP PARITY BYTE
 00BC 47        		MOV		B,A			; AND SAVE
 00BD 0D        		DCR		C			;COUNT THIS MOVE
 00BE C2B700    		JNZ		M$WRITE		;AND DO AGAIN
 00C1 EB        		XCHG				;<HL> = untranslated TRACK
 00C2 CDCA00    		CALL	SETMDRV		;SELECT PARITY BYTE LOCATION
 00C5 78        		MOV		A,B
 00C6 D3C6      		OUT		HDATA		;WRITE PARITY BYTE TO HEMORY DISK
 00C8 AF        		XRA		A			;AND SHOW NO ERROR
 00C9 C9        		RET					;RETURN
                ;
                ;	Set	M-DRIVE/H board to address In <HL>
                SETMDRV:
 00CA 3AE700    		LDA		SECTOR		;Get sector, Starts at 0
 00CD D3C7      		OUT		HADDR		;<A>: to M-DRIVE/H board
 00CF 7C        		MOV		A,H			;<H>: is always 0 or 1
 00D0 D3C7      		OUT		HADDR
 00D2 7D        		MOV		A,L			;<L>: Upper bit's picks track 0-3
 00D3 D3C7      		OUT		HADDR		; remainder picks sector and byte
 00D5 C9        		RET
                ;
                ;	Flags and Buffers
                ;
 00D6 00        SELFLG:	DB		0			;0 = Not selected, -1 Selected
                ;
                ;	Disk Parameter Header
                ;
 00D7 0000      MD$DPH:	DW	0				;SECT0R TRANSLATE TABLE
 00D9 0000000000		DW	0,0,0			;SCRATCH
 00DF EC00      		DW	BUFDIR			;DIRECT0RY BUFFER
 00E1 3200      		DW	MD$DPB			;DPB BLOCK
 00E3 0000      		DW	0				;CHECKSUM VECTOR
 00E5 6C01      		DW	ALV				;ALL0CATI0N VECTOR
                ;
 00E7 00        SECTOR:	DB		0			;SECTOR: 0-255
 00E8 0000      TRACK:	DW		0			;TRACK:  0-65535
 00EA 0000      DMAADR:	DW		0			;ADDRESS OF DMA BUFFER
                ;	End of initialized code
 00EC =         MDISKL:	EQU		$-MDRIVE	;LENGTH OF MDRIVE BIOS
 00EC           BUFDIR:	DS		80H			;DIRECTORY BUFFER
 016C           ALV:	DS		(((DSM*spt)+7)/spt)+1
                
 026B           	END
